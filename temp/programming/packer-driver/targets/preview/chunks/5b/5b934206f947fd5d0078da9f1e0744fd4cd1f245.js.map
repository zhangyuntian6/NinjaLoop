{"version":3,"sources":["file:///D:/NinjaLoop/assets/Script/UI/SelectTalentPanel.ts"],"names":["_decorator","Node","Prefab","Label","instantiate","Button","Message","eventMsg","TalentItem","UIPanel","ccclass","property","SelectTalentPanel","type","talentItems","selectedTalentIndices","_talentList","_limitSelectedTalentNum","start","init","talentList","talentItemGroup","removeAllChildren","tips","string","forEach","talentInfo","index","itemNode","talentItemPrfb","setParent","item","getComponent","setData","push","onItemClick","onTalentItemClicked","bind","updateCheckButtonState","length","checkButtonLbl","checkButton","interactable","left","itemIndex","idx","indexOf","splice","setSelected","onCheckButtonClicked","selectedTalentList","emit","TalentSelectEnd","onShow"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Node, Prefab, Label, instantiate, Button } from 'cc';\nimport { Message } from '../Defines';\nimport { ITalentInfo } from '../Talent';\nimport { eventMsg } from '../Utils/EventMessage';\nimport { TalentItem } from './TalentItem';\nimport { UIPanel } from './UIPanel';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SelectTalentPanel')\nexport class SelectTalentPanel extends UIPanel {\n    @property({type: Node})\n    public talentItemGroup: Node;\n    @property({type: Prefab})\n    public talentItemPrfb: Prefab;\n\n    @property({type: Button})\n    public checkButton: Button;\n    @property({type: Label})\n    public checkButtonLbl: Label;\n    @property({type: Label})\n    public tips: Label;\n\n    public talentItems: TalentItem[] = [];\n    public selectedTalentIndices: number[] = [];\n    private _talentList: ITalentInfo[];\n    private _limitSelectedTalentNum = 3;\n\n    start () {\n\n    }\n\n    public init(talentList: ITalentInfo[]) {\n        this._talentList = talentList;\n        this.talentItemGroup.removeAllChildren();\n        this.selectedTalentIndices = [];\n        this.talentItems = [];\n        this.tips.string = `最多选择${this._limitSelectedTalentNum}个天赋`;\n\n        talentList.forEach((talentInfo, index) => {\n            const itemNode = instantiate(this.talentItemPrfb);\n            itemNode.setParent(this.talentItemGroup);\n            const item = itemNode.getComponent(TalentItem);\n            item.index = index;\n            item.setData(talentInfo);\n            this.talentItems.push(item);\n            item.onItemClick = this.onTalentItemClicked.bind(this);\n        });\n\n        this.updateCheckButtonState();\n    }\n\n    public updateCheckButtonState() {\n        if(this.selectedTalentIndices.length === this._limitSelectedTalentNum) {\n            this.checkButtonLbl.string = \"完成\";\n            this.checkButton.interactable = true;\n        } else {\n            const left = this._limitSelectedTalentNum - this.selectedTalentIndices.length;\n            this.checkButtonLbl.string = `还差${left}个天赋`\n            this.checkButton.interactable = false;\n        }\n    }\n\n    public onTalentItemClicked(itemIndex: number) {\n        const idx = this.selectedTalentIndices.indexOf(itemIndex);\n        if (idx >= 0) {\n            this.selectedTalentIndices.splice(idx, 1);\n        } else {\n            // 超过数量则替换掉上个选择的对象\n            if (this.selectedTalentIndices.length === this._limitSelectedTalentNum) {\n                this.selectedTalentIndices.splice(this._limitSelectedTalentNum - 1, 1);\n            }\n            this.selectedTalentIndices.push(itemIndex);\n        }\n\n        this.talentItems.forEach((item, index) => {\n            if (this.selectedTalentIndices.indexOf(index) >= 0) {\n                item.setSelected(true);\n            } else {\n                item.setSelected(false);\n            }\n        })\n        this.updateCheckButtonState();\n    }\n\n    public onCheckButtonClicked() {\n        const selectedTalentList: ITalentInfo[] = [];\n        this.selectedTalentIndices.forEach((idx) => {\n            selectedTalentList.push(this._talentList[idx]);\n        })\n        eventMsg.emit(Message.TalentSelectEnd, selectedTalentList);\n    }\n\n    public onShow(talentList: ITalentInfo[]) {\n        this.init(talentList);\n    }\n\n    // update (deltaTime: number) {\n    //     // [4]\n    // }\n}\n"]}