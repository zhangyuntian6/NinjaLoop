{"version":3,"sources":["file:///D:/NinjaLoop/assets/Script/UI/AchievementHint.ts"],"names":["_decorator","Component","Label","Widget","tween","ccclass","property","AchievementHint","type","_isShowing","_timer","start","show","content","time","node","active","contentLbl","string","widget","top","to","setTimeout","clearTimeout"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,K,OAAAA,K;;;;;;;;;OAC/C;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;iCAGjBO,e,WADZF,OAAO,CAAC,iBAAD,C,UAEHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEN;AAAP,OAAD,C,UAERI,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEL;AAAP,OAAD,C,2BAJb,MACaI,eADb,SACqCN,SADrC,CAC+C;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAMnCQ,UANmC,GAMtB,KANsB;AAAA,eAOnCC,MAPmC,GAO1B,IAP0B;AAAA;;AAS3CC,QAAAA,KAAK,GAAI,CACL;AACH,SAX0C,CAa3C;AACA;AACA;;;AAGOC,QAAAA,IAAI,CAACC,OAAD,EAAkBC,IAAlB,EAAqC;AAAA,cAAnBA,IAAmB;AAAnBA,YAAAA,IAAmB,GAAJ,CAAI;AAAA;;AAC5C,cAAI,CAAC,KAAKL,UAAV,EAAsB;AAClB,iBAAKA,UAAL;AACA,iBAAKM,IAAL,CAAUC,MAAV,GAAmB,IAAnB;AACA,iBAAKC,UAAL,CAAgBC,MAAhB,GAAyBL,OAAzB;AACA,iBAAKM,MAAL,CAAYC,GAAZ,GAAkB,CAAC,GAAnB;AACAhB,YAAAA,KAAK,CAAC,KAAKe,MAAN,CAAL,CAAmBE,EAAnB,CAAsB,GAAtB,EAA2B;AAACD,cAAAA,GAAG,EAAE;AAAN,aAA3B,EAAqCT,KAArC,GALkB,CAMlB;;AACA,iBAAKD,MAAL,GAAcY,UAAU,CAAC,MAAK;AAC1B,mBAAKP,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACA,mBAAKP,UAAL,GAAkB,KAAlB;AACH,aAHuB,EAGrBK,IAAI,GAAC,IAHgB,CAAxB;AAIH,WAXD,MAWO;AACH,iBAAKG,UAAL,CAAgBC,MAAhB,GAAyBL,OAAzB;AACAU,YAAAA,YAAY,CAAC,KAAKb,MAAN,CAAZ;AACA,iBAAKA,MAAL,GAAcY,UAAU,CAAC,MAAK;AAC1B,mBAAKP,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACA,mBAAKP,UAAL,GAAkB,KAAlB;AACH,aAHuB,EAGrBK,IAAI,GAAC,IAHgB,CAAxB;AAIH;AACJ;;AAtC0C,O","sourcesContent":["\nimport { _decorator, Component, Node, Label, Widget, tween, Vec2, Vec3 } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('AchievementHint')\nexport class AchievementHint extends Component {\n    @property({type: Label})\n    public contentLbl: Label;\n    @property({type: Widget})\n    public widget: Widget;\n\n    private _isShowing = false;\n    private _timer = null;\n\n    start () {\n        // [3]\n    }\n\n    // update (deltaTime: number) {\n    //     // [4]\n    // }\n\n\n    public show(content: string, time: number = 1)  {\n        if (!this._isShowing) {\n            this._isShowing;\n            this.node.active = true;\n            this.contentLbl.string = content;\n            this.widget.top = -100;\n            tween(this.widget).to(0.5, {top: 0}).start();\n            //tween(this.node).to(0.5, {position: new Vec3(0, 560, 0)});\n            this._timer = setTimeout(()=> {\n                this.node.active = false;\n                this._isShowing = false;\n            }, time*1000);\n        } else {\n            this.contentLbl.string = content;\n            clearTimeout(this._timer);\n            this._timer = setTimeout(()=> {\n                this.node.active = false;\n                this._isShowing = false;\n            }, time*1000);\n        }\n    }\n}\n"]}