{"version":3,"sources":["file:///D:/NinjaLoop/assets/Script/functions/condition.ts"],"names":["parseCondition","condition","conditions","length","stack","unshift","cursor","catchString","i","str","substring","trim","push","sub","shift","checkCondition","property","checkParsedConditions","Array","isArray","checkProp","ret","search","prop","symbol","d","propData","get","conditionData","JSON","parse","Number","includes","p","extractMaxTriggers","RE_AGE_CONDITION","match_object","exec","age_list","split"],"mappings":"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","sourcesContent":["function parseCondition(condition) {\n\n    const conditions = [];\n    const length = condition.length;\n    const stack = [];\n    stack.unshift(conditions);\n    let cursor = 0;\n    const catchString = i => {\n        const str = condition.substring(cursor, i).trim();\n        cursor = i;\n        if(str) stack[0].push(str);\n    };\n\n    for(let i=0; i<length; i++) {\n        switch(condition[i]) {\n            case ' ': continue;\n\n            case '(':\n                catchString(i);\n                cursor ++;\n                const sub = [];\n                stack[0].push(sub);\n                stack.unshift(sub);\n                break;\n\n            case ')':\n                catchString(i);\n                cursor ++;\n                stack.shift();\n                break;\n\n            case '|':\n            case '&':\n                catchString(i);\n                catchString(i+1);\n                break;\n            default: continue;\n        }\n    }\n\n    catchString(length);\n\n    return conditions;\n}\n\nfunction checkCondition(property, condition) {\n    const conditions = parseCondition(condition);\n    return checkParsedConditions(property, conditions);\n}\n\nfunction checkParsedConditions(property, conditions) {\n    if(!Array.isArray(conditions)) return checkProp(property, conditions);\n    if(conditions.length == 0) return true;\n    if(conditions.length == 1) return checkParsedConditions(property, conditions[0]);\n\n    let ret = checkParsedConditions(property, conditions[0]);\n    for(let i=1; i<conditions.length; i+=2) {\n        switch(conditions[i]) {\n            case '&':\n                if(ret) ret = checkParsedConditions(property, conditions[i+1]);\n                break;\n            case '|':\n                if(ret) return true;\n                ret = checkParsedConditions(property, conditions[i+1]);\n                break;\n            default: return false;\n        }\n    }\n    return ret;\n}\n\nfunction checkProp(property, condition) {\n\n    const length = condition.length;\n    let i = condition.search(/[><\\!\\?=]/);\n\n    const prop = condition.substring(0,i);\n    const symbol = condition.substring(i, i+=(condition[i+1]=='='?2:1));\n    const d = condition.substring(i, length);\n\n    const propData = property.get(prop);\n    const conditionData = d[0]=='['? JSON.parse(d): Number(d);\n\n    switch(symbol) {\n        case '>':  return propData >  conditionData;\n        case '<':  return propData <  conditionData;\n        case '>=': return propData >= conditionData;\n        case '<=': return propData <= conditionData;\n        case '=':\n            if(Array.isArray(propData))\n                return propData.includes(conditionData);\n            return propData == conditionData;\n        case '!=':\n            if(Array.isArray(propData))\n                return !propData.includes(conditionData);\n            return propData == conditionData;\n        case '?':\n            if(Array.isArray(propData)) {\n                for(const p of propData)\n                    if(conditionData.includes(p)) return true;\n                return false;\n            }\n            return conditionData.includes(propData);\n        case '!':\n            if(Array.isArray(propData)) {\n                for(const p of propData)\n                    if(conditionData.includes(p)) return false;\n                return true;\n            }\n            return !conditionData.includes(propData);\n\n        default: return false;\n    }\n}\n\nfunction extractMaxTriggers(condition) {\n    // Assuming only age related talents can be triggered multiple times.\n    const RE_AGE_CONDITION = /AGE\\?\\[([0-9\\,]+)\\]/;\n    const match_object = RE_AGE_CONDITION.exec(condition);\n    if (match_object == null) {\n        // Not age related, single trigger.\n        return 1;\n    }\n    \n    const age_list = match_object[1].split(\",\");\n    return age_list.length;\n}\n\nexport { checkCondition, extractMaxTriggers };"]}