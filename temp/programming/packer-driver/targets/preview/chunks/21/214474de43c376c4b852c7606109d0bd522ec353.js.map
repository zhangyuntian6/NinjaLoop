{"version":3,"sources":["file:///D:/NinjaLoop/assets/Script/UI/TagItem.ts"],"names":["_decorator","Component","Label","UIOpacity","ccclass","property","TagItem","type","start","setFontSize","size","tagName","fontSize","setOpacity","op","uiOpacity","opacity","setTagName","name","string","refresh","fallLength","radius","pos","node","position","scale","z","alpha"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,S,OAAAA,S;;;;;;;;;OACvC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;yBAGjBM,O,WADZF,OAAO,CAAC,SAAD,C,UAEHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEL;AAAP,OAAD,C,UAGRG,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEJ;AAAP,OAAD,C,2BALb,MACaG,OADb,SAC6BL,SAD7B,CACuC;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAOnCO,QAAAA,KAAK,GAAI,CACL;AACH;;AAEMC,QAAAA,WAAW,CAACC,IAAD,EAAc;AAC5B,eAAKC,OAAL,CAAaC,QAAb,GAAwBF,IAAxB;AACH;;AAEMG,QAAAA,UAAU,CAACC,EAAD,EAAa;AAC1B,eAAKC,SAAL,CAAeC,OAAf,GAAyBF,EAAzB;AACH;;AAEMG,QAAAA,UAAU,CAACC,IAAD,EAAe;AAC5B,eAAKP,OAAL,CAAaQ,MAAb,GAAsBD,IAAtB;AACH;;AAEME,QAAAA,OAAO,CAACC,UAAD,EAAqBC,MAArB,EAAqC;AAC/C,cAAMC,GAAG,GAAG,KAAKC,IAAL,CAAUC,QAAtB;AACA,cAAMC,KAAK,GAAGL,UAAU,IAAIA,UAAU,GAAGE,GAAG,CAACI,CAArB,CAAxB;AACA,cAAMC,KAAK,GAAG,CAACL,GAAG,CAACI,CAAJ,GAAQL,MAAT,KAAoBA,MAAM,GAAG,CAA7B,CAAd;AACA,eAAKX,OAAL,CAAaC,QAAb,GAAwB,KAAKc,KAA7B;AACA,eAAKX,SAAL,CAAeC,OAAf,GAAyB,CAACY,KAAK,GAAG,GAAT,IAAgB,GAAzC;AACH,SA7BkC,CA+BnC;AACA;AACA;;;AAjCmC,O","sourcesContent":["\nimport { _decorator, Component, Node, Label, UIOpacity } from 'cc';\nconst { ccclass, property } = _decorator;\n \n@ccclass('TagItem')\nexport class TagItem extends Component {\n    @property({type: Label})\n    public tagName: Label;\n\n    @property({type: UIOpacity})\n    public uiOpacity: UIOpacity;\n\n    start () {\n        // [3]\n    }\n\n    public setFontSize(size:number) {\n        this.tagName.fontSize = size;\n    }\n\n    public setOpacity(op: number) {\n        this.uiOpacity.opacity = op;\n    }\n\n    public setTagName(name: string) {\n        this.tagName.string = name;\n    }\n\n    public refresh(fallLength: number, radius: number) {\n        const pos = this.node.position;\n        const scale = fallLength / (fallLength - pos.z);\n        const alpha = (pos.z + radius) / (radius * 2);\n        this.tagName.fontSize = 15 * scale;\n        this.uiOpacity.opacity = (alpha + 0.5) * 255;\n    }\n\n    // update (deltaTime: number) {\n    //     // [4]\n    // }\n}\n\n"]}