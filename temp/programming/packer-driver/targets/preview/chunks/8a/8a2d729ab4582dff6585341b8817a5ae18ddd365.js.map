{"version":3,"sources":["file:///D:/NinjaLoop/assets/Script/property.ts"],"names":["Property","sys","max","min","sum","clone","listRandom","constructor","TYPES","AGE","CHR","INT","STR","MNY","SPR","LIF","TLT","EVT","TMS","LAGE","HAGE","LCHR","HCHR","LINT","HINT","LSTR","HSTR","LMNY","HMNY","LSPR","HSPR","SUM","EXT","ATLT","AEVT","ACHV","CTLT","CEVT","CACHV","RDM","SPECIAL","initial","age","a","event","talent","Array","isArray","split","map","v","value","n","Number","length","push","restart","data","Infinity","key","change","restartLastStep","get","prop","fallback","Math","floor","lsget","set","hl","achieve","lsset","parseInt","getLastRecord","index","indexOf","splice","includes","hookSpecial","effect","effects","isEnd","ageNext","getAgeData","keys","l","h","newData","lastData","concat","Date","now","from","Set","flat","localStorage","getItem","JSON","parse","setItem","stringify"],"mappings":";;;sHAGMA,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHGC,MAAAA,G,OAAAA,G;;AACAC,MAAAA,G,iBAAAA,G;AAAKC,MAAAA,G,iBAAAA,G;AAAKC,MAAAA,G,iBAAAA,G;AAAKC,MAAAA,K,iBAAAA,K;AAAOC,MAAAA,U,iBAAAA,U;;;;;;;;;;;;AAEzBN,MAAAA,Q,GAAN,MAAMA,QAAN,CAAe;AACXO,QAAAA,WAAW,GAAG;AAAA,eAEdC,KAFc,GAEN;AACJ;AACAC,YAAAA,GAAG,EAAE,KAFD;AAEQ;AACZC,YAAAA,GAAG,EAAE,KAHD;AAGQ;AACZC,YAAAA,GAAG,EAAE,KAJD;AAIQ;AACZC,YAAAA,GAAG,EAAE,KALD;AAKQ;AACZC,YAAAA,GAAG,EAAE,KAND;AAMQ;AACZC,YAAAA,GAAG,EAAE,KAPD;AAOQ;AACZC,YAAAA,GAAG,EAAE,KARD;AAQQ;AACZC,YAAAA,GAAG,EAAE,KATD;AASQ;AACZC,YAAAA,GAAG,EAAE,KAVD;AAUQ;AACZC,YAAAA,GAAG,EAAE,KAXD;AAWQ;AAEZ;AACAC,YAAAA,IAAI,EAAE,MAdF;AAcU;AACdC,YAAAA,IAAI,EAAE,MAfF;AAeU;AACdC,YAAAA,IAAI,EAAE,MAhBF;AAgBU;AACdC,YAAAA,IAAI,EAAE,MAjBF;AAiBU;AACdC,YAAAA,IAAI,EAAE,MAlBF;AAkBU;AACdC,YAAAA,IAAI,EAAE,MAnBF;AAmBU;AACdC,YAAAA,IAAI,EAAE,MApBF;AAoBU;AACdC,YAAAA,IAAI,EAAE,MArBF;AAqBU;AACdC,YAAAA,IAAI,EAAE,MAtBF;AAsBU;AACdC,YAAAA,IAAI,EAAE,MAvBF;AAuBU;AACdC,YAAAA,IAAI,EAAE,MAxBF;AAwBU;AACdC,YAAAA,IAAI,EAAE,MAzBF;AAyBU;AAEdC,YAAAA,GAAG,EAAE,KA3BD;AA2BQ;AAEZC,YAAAA,GAAG,EAAE,KA7BD;AA6BQ;AAEZ;AACA;AACAC,YAAAA,IAAI,EAAE,MAjCF;AAiCU;AACdC,YAAAA,IAAI,EAAE,MAlCF;AAkCU;AACdC,YAAAA,IAAI,EAAE,MAnCF;AAmCU;AAEdC,YAAAA,IAAI,EAAE,MArCF;AAqCU;AACdC,YAAAA,IAAI,EAAE,MAtCF;AAsCU;AACdC,YAAAA,KAAK,EAAE,OAvCH;AAuCY;AAEhB;AACAC,YAAAA,GAAG,EAAE,KA1CD,CA0CQ;;AA1CR,WAFM;AAgDd;AAhDc,eAiDdC,OAjDc,GAiDJ;AACND,YAAAA,GAAG,EAAE,CAAE;AACH,iBAAK/B,KAAL,CAAWE,GADV,EAED,KAAKF,KAAL,CAAWG,GAFV,EAGD,KAAKH,KAAL,CAAWI,GAHV,EAID,KAAKJ,KAAL,CAAWK,GAJV,EAKD,KAAKL,KAAL,CAAWM,GALV;AADC,WAjDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA4DN;AA5DM;AAAE;;AA8DhB2B,QAAAA,OAAO,OAAQ;AAAA,cAAP;AAACC,YAAAA;AAAD,WAAO;AAEX,kEAAgBA,GAAhB;;AACA,eAAI,IAAMC,CAAV,IAAeD,GAAf,EAAoB;AAAA;;AAChB,gBAAI;AAAEE,cAAAA,KAAF;AAASC,cAAAA;AAAT,gBAAoBH,GAAG,CAACC,CAAD,CAA3B;AACA,gBAAG,CAACG,KAAK,CAACC,OAAN,CAAcH,KAAd,CAAJ,EACIA,KAAK,GAAG,WAAAA,KAAK,SAAL,mBAAOI,KAAP,CAAa,GAAb,MAAqB,EAA7B;AAEJJ,YAAAA,KAAK,GAAGA,KAAK,CAACK,GAAN,CAAUC,CAAC,IAAE;AACjB,kBAAMC,KAAK,GAAG,MAAGD,CAAH,EAAOF,KAAP,CAAa,GAAb,EAAkBC,GAAlB,CAAsBG,CAAC,IAAEC,MAAM,CAACD,CAAD,CAA/B,CAAd;AACA,kBAAGD,KAAK,CAACG,MAAN,IAAc,CAAjB,EAAoBH,KAAK,CAACI,IAAN,CAAW,CAAX;AACpB,qBAAOJ,KAAP;AACH,aAJO,CAAR;AAMA,gBAAG,CAACL,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAJ,EACIA,MAAM,GAAG,YAAAA,MAAM,SAAN,oBAAQG,KAAR,CAAc,GAAd,MAAsB,EAA/B;AAEJH,YAAAA,MAAM,GAAGA,MAAM,CAACI,GAAP,CAAWC,CAAC,IAAEG,MAAM,CAACH,CAAD,CAApB,CAAT;AAEAR,YAAAA,GAAG,CAACC,CAAD,CAAH,GAAS;AAAEC,cAAAA,KAAF;AAASC,cAAAA;AAAT,aAAT;AACH;AACJ;;AAEDW,QAAAA,OAAO,CAACC,IAAD,EAAO;AACV,4DAAa;AACT,aAAC,KAAKjD,KAAL,CAAWC,GAAZ,GAAkB,CAAC,CADV;AAGT,aAAC,KAAKD,KAAL,CAAWE,GAAZ,GAAkB,CAHT;AAIT,aAAC,KAAKF,KAAL,CAAWG,GAAZ,GAAkB,CAJT;AAKT,aAAC,KAAKH,KAAL,CAAWI,GAAZ,GAAkB,CALT;AAMT,aAAC,KAAKJ,KAAL,CAAWK,GAAZ,GAAkB,CANT;AAOT,aAAC,KAAKL,KAAL,CAAWM,GAAZ,GAAkB,CAPT;AAST,aAAC,KAAKN,KAAL,CAAWO,GAAZ,GAAkB,CATT;AAWT,aAAC,KAAKP,KAAL,CAAWQ,GAAZ,GAAkB,EAXT;AAYT,aAAC,KAAKR,KAAL,CAAWS,GAAZ,GAAkB,EAZT;AAcT,aAAC,KAAKT,KAAL,CAAWW,IAAZ,GAAmBuC,QAdV;AAeT,aAAC,KAAKlD,KAAL,CAAWa,IAAZ,GAAmBqC,QAfV;AAgBT,aAAC,KAAKlD,KAAL,CAAWe,IAAZ,GAAmBmC,QAhBV;AAiBT,aAAC,KAAKlD,KAAL,CAAWiB,IAAZ,GAAmBiC,QAjBV;AAkBT,aAAC,KAAKlD,KAAL,CAAWqB,IAAZ,GAAmB6B,QAlBV;AAmBT,aAAC,KAAKlD,KAAL,CAAWmB,IAAZ,GAAmB+B,QAnBV;AAqBT,aAAC,KAAKlD,KAAL,CAAWY,IAAZ,GAAmB,CAACsC,QArBX;AAsBT,aAAC,KAAKlD,KAAL,CAAWc,IAAZ,GAAmB,CAACoC,QAtBX;AAuBT,aAAC,KAAKlD,KAAL,CAAWgB,IAAZ,GAAmB,CAACkC,QAvBX;AAwBT,aAAC,KAAKlD,KAAL,CAAWkB,IAAZ,GAAmB,CAACgC,QAxBX;AAyBT,aAAC,KAAKlD,KAAL,CAAWoB,IAAZ,GAAmB,CAAC8B,QAzBX;AA0BT,aAAC,KAAKlD,KAAL,CAAWsB,IAAZ,GAAmB,CAAC4B;AA1BX,WAAb;;AA4BA,eAAI,IAAMC,GAAV,IAAiBF,IAAjB,EACI,KAAKG,MAAL,CAAYD,GAAZ,EAAiBF,IAAI,CAACE,GAAD,CAArB;AACP;;AAEDE,QAAAA,eAAe,GAAG;AACd,0DAAW,KAAKrD,KAAL,CAAWW,IAAtB,IAA8B,KAAK2C,GAAL,CAAS,KAAKtD,KAAL,CAAWC,GAApB,CAA9B;AACA,0DAAW,KAAKD,KAAL,CAAWa,IAAtB,IAA8B,KAAKyC,GAAL,CAAS,KAAKtD,KAAL,CAAWE,GAApB,CAA9B;AACA,0DAAW,KAAKF,KAAL,CAAWe,IAAtB,IAA8B,KAAKuC,GAAL,CAAS,KAAKtD,KAAL,CAAWG,GAApB,CAA9B;AACA,0DAAW,KAAKH,KAAL,CAAWiB,IAAtB,IAA8B,KAAKqC,GAAL,CAAS,KAAKtD,KAAL,CAAWI,GAApB,CAA9B;AACA,0DAAW,KAAKJ,KAAL,CAAWqB,IAAtB,IAA8B,KAAKiC,GAAL,CAAS,KAAKtD,KAAL,CAAWM,GAApB,CAA9B;AACA,0DAAW,KAAKN,KAAL,CAAWmB,IAAtB,IAA8B,KAAKmC,GAAL,CAAS,KAAKtD,KAAL,CAAWK,GAApB,CAA9B;AACA,0DAAW,KAAKL,KAAL,CAAWY,IAAtB,IAA8B,KAAK0C,GAAL,CAAS,KAAKtD,KAAL,CAAWC,GAApB,CAA9B;AACA,0DAAW,KAAKD,KAAL,CAAWc,IAAtB,IAA8B,KAAKwC,GAAL,CAAS,KAAKtD,KAAL,CAAWE,GAApB,CAA9B;AACA,0DAAW,KAAKF,KAAL,CAAWgB,IAAtB,IAA8B,KAAKsC,GAAL,CAAS,KAAKtD,KAAL,CAAWG,GAApB,CAA9B;AACA,0DAAW,KAAKH,KAAL,CAAWkB,IAAtB,IAA8B,KAAKoC,GAAL,CAAS,KAAKtD,KAAL,CAAWI,GAApB,CAA9B;AACA,0DAAW,KAAKJ,KAAL,CAAWoB,IAAtB,IAA8B,KAAKkC,GAAL,CAAS,KAAKtD,KAAL,CAAWK,GAApB,CAA9B;AACA,0DAAW,KAAKL,KAAL,CAAWsB,IAAtB,IAA8B,KAAKgC,GAAL,CAAS,KAAKtD,KAAL,CAAWM,GAApB,CAA9B;AACH;;AAEDgD,QAAAA,GAAG,CAACC,IAAD,EAAO;AACN,kBAAOA,IAAP;AACI,iBAAK,KAAKvD,KAAL,CAAWC,GAAhB;AACA,iBAAK,KAAKD,KAAL,CAAWE,GAAhB;AACA,iBAAK,KAAKF,KAAL,CAAWG,GAAhB;AACA,iBAAK,KAAKH,KAAL,CAAWI,GAAhB;AACA,iBAAK,KAAKJ,KAAL,CAAWK,GAAhB;AACA,iBAAK,KAAKL,KAAL,CAAWM,GAAhB;AACA,iBAAK,KAAKN,KAAL,CAAWO,GAAhB;AACA,iBAAK,KAAKP,KAAL,CAAWQ,GAAhB;AACA,iBAAK,KAAKR,KAAL,CAAWS,GAAhB;AACI,qBAAO;AAAA;AAAA,kCAAM,gDAAW8C,IAAX,CAAN,CAAP;;AACJ,iBAAK,KAAKvD,KAAL,CAAWW,IAAhB;AACA,iBAAK,KAAKX,KAAL,CAAWa,IAAhB;AACA,iBAAK,KAAKb,KAAL,CAAWe,IAAhB;AACA,iBAAK,KAAKf,KAAL,CAAWiB,IAAhB;AACA,iBAAK,KAAKjB,KAAL,CAAWmB,IAAhB;AACA,iBAAK,KAAKnB,KAAL,CAAWqB,IAAhB;AACI,qBAAO;AAAA;AAAA,8BACH,gDAAWkC,IAAX,CADG,EAEH,KAAKD,GAAL,CAAS,KAAKE,QAAL,CAAcD,IAAd,CAAT,CAFG,CAAP;;AAIJ,iBAAK,KAAKvD,KAAL,CAAWY,IAAhB;AACA,iBAAK,KAAKZ,KAAL,CAAWc,IAAhB;AACA,iBAAK,KAAKd,KAAL,CAAWgB,IAAhB;AACA,iBAAK,KAAKhB,KAAL,CAAWkB,IAAhB;AACA,iBAAK,KAAKlB,KAAL,CAAWoB,IAAhB;AACA,iBAAK,KAAKpB,KAAL,CAAWsB,IAAhB;AACI,qBAAO;AAAA;AAAA,8BACH,gDAAWiC,IAAX,CADG,EAEH,KAAKD,GAAL,CAAS,KAAKE,QAAL,CAAcD,IAAd,CAAT,CAFG,CAAP;;AAIJ,iBAAK,KAAKvD,KAAL,CAAWuB,GAAhB;AACI,kBAAMX,IAAI,GAAG,KAAK0C,GAAL,CAAS,KAAKtD,KAAL,CAAWY,IAApB,CAAb;AACA,kBAAME,IAAI,GAAG,KAAKwC,GAAL,CAAS,KAAKtD,KAAL,CAAWc,IAApB,CAAb;AACA,kBAAME,IAAI,GAAG,KAAKsC,GAAL,CAAS,KAAKtD,KAAL,CAAWgB,IAApB,CAAb;AACA,kBAAME,IAAI,GAAG,KAAKoC,GAAL,CAAS,KAAKtD,KAAL,CAAWkB,IAApB,CAAb;AACA,kBAAME,IAAI,GAAG,KAAKkC,GAAL,CAAS,KAAKtD,KAAL,CAAWoB,IAApB,CAAb;AACA,kBAAME,IAAI,GAAG,KAAKgC,GAAL,CAAS,KAAKtD,KAAL,CAAWsB,IAApB,CAAb;AACA,qBAAOmC,IAAI,CAACC,KAAL,CAAW;AAAA;AAAA,8BAAI5C,IAAJ,EAAUE,IAAV,EAAgBE,IAAhB,EAAsBE,IAAtB,EAA4BE,IAA5B,IAAkC,CAAlC,GAAsCV,IAAI,GAAC,CAAtD,CAAP;;AACJ,iBAAK,KAAKZ,KAAL,CAAWU,GAAhB;AACI,qBAAO,KAAKiD,KAAL,CAAW,OAAX,KAAuB,CAA9B;;AACJ,iBAAK,KAAK3D,KAAL,CAAWwB,GAAhB;AACI,qBAAO,KAAKmC,KAAL,CAAW,cAAX,KAA8B,IAArC;;AACJ,iBAAK,KAAK3D,KAAL,CAAWyB,IAAhB;AACA,iBAAK,KAAKzB,KAAL,CAAW0B,IAAhB;AACA,iBAAK,KAAK1B,KAAL,CAAW2B,IAAhB;AACI,qBAAO,KAAKgC,KAAL,CAAWJ,IAAX,KAAoB,EAA3B;;AACJ,iBAAK,KAAKvD,KAAL,CAAW4B,IAAhB;AACA,iBAAK,KAAK5B,KAAL,CAAW6B,IAAhB;AACA,iBAAK,KAAK7B,KAAL,CAAW8B,KAAhB;AACI,qBAAO,KAAKwB,GAAL,CACH,KAAKE,QAAL,CAAcD,IAAd,CADG,EAELT,MAFF;;AAGJ;AAAS,qBAAO,CAAP;AArDb;AAuDH;;AAEDU,QAAAA,QAAQ,CAACD,IAAD,EAAO;AACX,kBAAOA,IAAP;AACI,iBAAK,KAAKvD,KAAL,CAAWW,IAAhB;AACA,iBAAK,KAAKX,KAAL,CAAWY,IAAhB;AAAsB,qBAAO,KAAKZ,KAAL,CAAWC,GAAlB;;AACtB,iBAAK,KAAKD,KAAL,CAAWa,IAAhB;AACA,iBAAK,KAAKb,KAAL,CAAWc,IAAhB;AAAsB,qBAAO,KAAKd,KAAL,CAAWE,GAAlB;;AACtB,iBAAK,KAAKF,KAAL,CAAWe,IAAhB;AACA,iBAAK,KAAKf,KAAL,CAAWgB,IAAhB;AAAsB,qBAAO,KAAKhB,KAAL,CAAWG,GAAlB;;AACtB,iBAAK,KAAKH,KAAL,CAAWiB,IAAhB;AACA,iBAAK,KAAKjB,KAAL,CAAWkB,IAAhB;AAAsB,qBAAO,KAAKlB,KAAL,CAAWI,GAAlB;;AACtB,iBAAK,KAAKJ,KAAL,CAAWmB,IAAhB;AACA,iBAAK,KAAKnB,KAAL,CAAWoB,IAAhB;AAAsB,qBAAO,KAAKpB,KAAL,CAAWK,GAAlB;;AACtB,iBAAK,KAAKL,KAAL,CAAWqB,IAAhB;AACA,iBAAK,KAAKrB,KAAL,CAAWsB,IAAhB;AAAsB,qBAAO,KAAKtB,KAAL,CAAWM,GAAlB;;AACtB,iBAAK,KAAKN,KAAL,CAAW4B,IAAhB;AAAsB,qBAAO,KAAK5B,KAAL,CAAWyB,IAAlB;;AACtB,iBAAK,KAAKzB,KAAL,CAAW6B,IAAhB;AAAsB,qBAAO,KAAK7B,KAAL,CAAW0B,IAAlB;;AACtB,iBAAK,KAAK1B,KAAL,CAAW8B,KAAhB;AAAuB,qBAAO,KAAK9B,KAAL,CAAW2B,IAAlB;;AACvB;AAAS;AAhBb;AAkBH;;AAEDiC,QAAAA,GAAG,CAACL,IAAD,EAAOZ,KAAP,EAAc;AACb,kBAAOY,IAAP;AACI,iBAAK,KAAKvD,KAAL,CAAWC,GAAhB;AACA,iBAAK,KAAKD,KAAL,CAAWE,GAAhB;AACA,iBAAK,KAAKF,KAAL,CAAWG,GAAhB;AACA,iBAAK,KAAKH,KAAL,CAAWI,GAAhB;AACA,iBAAK,KAAKJ,KAAL,CAAWK,GAAhB;AACA,iBAAK,KAAKL,KAAL,CAAWM,GAAhB;AACA,iBAAK,KAAKN,KAAL,CAAWO,GAAhB;AACA,iBAAK,KAAKP,KAAL,CAAWQ,GAAhB;AACA,iBAAK,KAAKR,KAAL,CAAWS,GAAhB;AACI,mBAAKoD,EAAL,CAAQN,IAAR,EAAc,gDAAWA,IAAX,IAAmB;AAAA;AAAA,kCAAMZ,KAAN,CAAjC;AACA,mBAAKmB,OAAL,CAAaP,IAAb,EAAmBZ,KAAnB;AACA;;AACJ,iBAAK,KAAK3C,KAAL,CAAWU,GAAhB;AACI,mBAAKqD,KAAL,CAAW,OAAX,EAAoBC,QAAQ,CAACrB,KAAD,CAAR,IAAmB,CAAvC;AACA;;AACJ,iBAAK,KAAK3C,KAAL,CAAWwB,GAAhB;AACI,mBAAKuC,KAAL,CAAW,cAAX,EAA2BpB,KAA3B;AACA;;AACJ;AAAS;AAnBb;AAqBH;;AAEDsB,QAAAA,aAAa,GAAG;AACZ,iBAAO;AAAA;AAAA,8BAAM;AACT,aAAC,KAAKjE,KAAL,CAAWC,GAAZ,GAAkB,KAAKqD,GAAL,CAAS,KAAKtD,KAAL,CAAWC,GAApB,CADT;AAET,aAAC,KAAKD,KAAL,CAAWE,GAAZ,GAAkB,KAAKoD,GAAL,CAAS,KAAKtD,KAAL,CAAWE,GAApB,CAFT;AAGT,aAAC,KAAKF,KAAL,CAAWG,GAAZ,GAAkB,KAAKmD,GAAL,CAAS,KAAKtD,KAAL,CAAWG,GAApB,CAHT;AAIT,aAAC,KAAKH,KAAL,CAAWI,GAAZ,GAAkB,KAAKkD,GAAL,CAAS,KAAKtD,KAAL,CAAWI,GAApB,CAJT;AAKT,aAAC,KAAKJ,KAAL,CAAWK,GAAZ,GAAkB,KAAKiD,GAAL,CAAS,KAAKtD,KAAL,CAAWK,GAApB,CALT;AAMT,aAAC,KAAKL,KAAL,CAAWM,GAAZ,GAAkB,KAAKgD,GAAL,CAAS,KAAKtD,KAAL,CAAWM,GAApB;AANT,WAAN,CAAP;AAQH;;AAED8C,QAAAA,MAAM,CAACG,IAAD,EAAOZ,KAAP,EAAc;AAChB,cAAGL,KAAK,CAACC,OAAN,CAAcI,KAAd,CAAH,EAAyB;AACrB,iBAAI,IAAMD,CAAV,IAAeC,KAAf,EACI,KAAKS,MAAL,CAAYG,IAAZ,EAAkBV,MAAM,CAACH,CAAD,CAAxB;;AACJ;AACH;;AACD,kBAAOa,IAAP;AACI,iBAAK,KAAKvD,KAAL,CAAWC,GAAhB;AACA,iBAAK,KAAKD,KAAL,CAAWE,GAAhB;AACA,iBAAK,KAAKF,KAAL,CAAWG,GAAhB;AACA,iBAAK,KAAKH,KAAL,CAAWI,GAAhB;AACA,iBAAK,KAAKJ,KAAL,CAAWK,GAAhB;AACA,iBAAK,KAAKL,KAAL,CAAWM,GAAhB;AACA,iBAAK,KAAKN,KAAL,CAAWO,GAAhB;AACI,mBAAKsD,EAAL,CAAQN,IAAR,EAAc,gDAAWA,IAAX,KAAoBV,MAAM,CAACF,KAAD,CAAxC;AACA;;AACJ,iBAAK,KAAK3C,KAAL,CAAWQ,GAAhB;AACA,iBAAK,KAAKR,KAAL,CAAWS,GAAhB;AACI,kBAAMiC,EAAC,GAAG,gDAAWa,IAAX,CAAV;;AACA,kBAAGZ,KAAK,GAAC,CAAT,EAAY;AACR,oBAAMuB,KAAK,GAAGxB,EAAC,CAACyB,OAAF,CAAUxB,KAAV,CAAd;;AACA,oBAAGuB,KAAK,IAAE,CAAC,CAAX,EAAcxB,EAAC,CAAC0B,MAAF,CAASF,KAAT,EAAe,CAAf;AACjB;;AACD,kBAAG,CAACxB,EAAC,CAAC2B,QAAF,CAAW1B,KAAX,CAAJ,EAAuBD,EAAC,CAACK,IAAF,CAAOJ,KAAP;AACvB,mBAAKmB,OAAL,CAAaP,IAAb,EAAmBZ,KAAnB;AACA;;AACJ,iBAAK,KAAK3C,KAAL,CAAWU,GAAhB;AACI,mBAAKkD,GAAL,CACIL,IADJ,EAEI,KAAKD,GAAL,CAASC,IAAT,IAAiBS,QAAQ,CAACrB,KAAD,CAF7B;AAIA;;AACJ;AAAS;AA1Bb;AA4BH;;AAED2B,QAAAA,WAAW,CAACf,IAAD,EAAO;AACd,kBAAOA,IAAP;AACI,iBAAK,KAAKvD,KAAL,CAAW+B,GAAhB;AAAqB,qBAAO;AAAA;AAAA,4CAAW,KAAKC,OAAL,CAAaD,GAAxB,CAAP;;AACrB;AAAS,qBAAOwB,IAAP;AAFb;AAIH;;AAEDgB,QAAAA,MAAM,CAACC,OAAD,EAAU;AACZ,eAAI,IAAIjB,IAAR,IAAgBiB,OAAhB,EACI,KAAKpB,MAAL,CACI,KAAKkB,WAAL,CAAiBf,IAAjB,CADJ,EAEIV,MAAM,CAAC2B,OAAO,CAACjB,IAAD,CAAR,CAFV;AAIP;;AAEDkB,QAAAA,KAAK,GAAG;AACJ,iBAAO,KAAKnB,GAAL,CAAS,KAAKtD,KAAL,CAAWO,GAApB,IAA2B,CAAlC;AACH;;AAEDmE,QAAAA,OAAO,GAAG;AACN,eAAKtB,MAAL,CAAY,KAAKpD,KAAL,CAAWC,GAAvB,EAA4B,CAA5B;AACA,cAAMiC,GAAG,GAAG,KAAKoB,GAAL,CAAS,KAAKtD,KAAL,CAAWC,GAApB,CAAZ;AACA,cAAM;AAACmC,YAAAA,KAAD;AAAQC,YAAAA;AAAR,cAAkB,KAAKsC,UAAL,CAAgBzC,GAAhB,CAAxB;AACA,iBAAO;AAACA,YAAAA,GAAD;AAAME,YAAAA,KAAN;AAAaC,YAAAA;AAAb,WAAP;AACH;;AAEDsC,QAAAA,UAAU,CAACzC,GAAD,EAAM;AACZ,iBAAO;AAAA;AAAA,8BAAM,sDAAcA,GAAd,CAAN,CAAP;AACH;;AAED2B,QAAAA,EAAE,CAACN,IAAD,EAAOZ,KAAP,EAAc;AACZ,cAAIiC,IAAJ;;AACA,kBAAOrB,IAAP;AACI,iBAAK,KAAKvD,KAAL,CAAWC,GAAhB;AAAqB2E,cAAAA,IAAI,GAAG,CAAC,KAAK5E,KAAL,CAAWW,IAAZ,EAAkB,KAAKX,KAAL,CAAWY,IAA7B,CAAP;AAA2C;;AAChE,iBAAK,KAAKZ,KAAL,CAAWE,GAAhB;AAAqB0E,cAAAA,IAAI,GAAG,CAAC,KAAK5E,KAAL,CAAWa,IAAZ,EAAkB,KAAKb,KAAL,CAAWc,IAA7B,CAAP;AAA2C;;AAChE,iBAAK,KAAKd,KAAL,CAAWG,GAAhB;AAAqByE,cAAAA,IAAI,GAAG,CAAC,KAAK5E,KAAL,CAAWe,IAAZ,EAAkB,KAAKf,KAAL,CAAWgB,IAA7B,CAAP;AAA2C;;AAChE,iBAAK,KAAKhB,KAAL,CAAWI,GAAhB;AAAqBwE,cAAAA,IAAI,GAAG,CAAC,KAAK5E,KAAL,CAAWiB,IAAZ,EAAkB,KAAKjB,KAAL,CAAWkB,IAA7B,CAAP;AAA2C;;AAChE,iBAAK,KAAKlB,KAAL,CAAWK,GAAhB;AAAqBuE,cAAAA,IAAI,GAAG,CAAC,KAAK5E,KAAL,CAAWmB,IAAZ,EAAkB,KAAKnB,KAAL,CAAWoB,IAA7B,CAAP;AAA2C;;AAChE,iBAAK,KAAKpB,KAAL,CAAWM,GAAhB;AAAqBsE,cAAAA,IAAI,GAAG,CAAC,KAAK5E,KAAL,CAAWqB,IAAZ,EAAkB,KAAKrB,KAAL,CAAWsB,IAA7B,CAAP;AAA2C;;AAChE;AAAS;AAPb;;AASA,cAAM,CAACuD,CAAD,EAAIC,CAAJ,IAASF,IAAf;AACA,0DAAWC,CAAX,IAAgB;AAAA;AAAA,0BAAI,gDAAWA,CAAX,CAAJ,EAAmBlC,KAAnB,CAAhB;AACA,0DAAWmC,CAAX,IAAgB;AAAA;AAAA,0BAAI,gDAAWA,CAAX,CAAJ,EAAmBnC,KAAnB,CAAhB;AACH;;AAEDmB,QAAAA,OAAO,CAACP,IAAD,EAAOwB,OAAP,EAAgB;AACnB,cAAI5B,GAAJ;;AACA,kBAAOI,IAAP;AACI,iBAAK,KAAKvD,KAAL,CAAW2B,IAAhB;AACI,kBAAMqD,SAAQ,GAAG,KAAKrB,KAAL,CAAWJ,IAAX,CAAjB;;AACA,mBAAKQ,KAAL,CACIR,IADJ,EAEI,CAACyB,SAAQ,IAAI,EAAb,EAAiBC,MAAjB,CAAwB,CAAC,CAACF,OAAD,EAAUG,IAAI,CAACC,GAAL,EAAV,CAAD,CAAxB,CAFJ;AAIA;;AACJ,iBAAK,KAAKnF,KAAL,CAAWQ,GAAhB;AAAqB2C,cAAAA,GAAG,GAAG,KAAKnD,KAAL,CAAWyB,IAAjB;AAAuB;;AAC5C,iBAAK,KAAKzB,KAAL,CAAWS,GAAhB;AAAqB0C,cAAAA,GAAG,GAAG,KAAKnD,KAAL,CAAW0B,IAAjB;AAAuB;;AAC5C;AAAS;AAVb;;AAYA,cAAMsD,QAAQ,GAAG,KAAKrB,KAAL,CAAWR,GAAX,KAAmB,EAApC;AACA,eAAKY,KAAL,CACIZ,GADJ,EAEIb,KAAK,CAAC8C,IAAN,CACI,IAAIC,GAAJ,CACIL,QAAQ,CACHC,MADL,CACYF,OAAO,IAAE,EADrB,EAEKO,IAFL,EADJ,CADJ,CAFJ;AAUH;;AAED3B,QAAAA,KAAK,CAACR,GAAD,EAAM;AACP,cAAMF,IAAI,GAAGxD,GAAG,CAAC8F,YAAJ,CAAiBC,OAAjB,CAAyBrC,GAAzB,CAAb;AACA,cAAGF,IAAI,KAAK,IAAZ,EAAkB;AAClB,iBAAOwC,IAAI,CAACC,KAAL,CAAWzC,IAAX,CAAP;AACH;;AAEDc,QAAAA,KAAK,CAACZ,GAAD,EAAMR,KAAN,EAAa;AACdlD,UAAAA,GAAG,CAAC8F,YAAJ,CAAiBI,OAAjB,CACIxC,GADJ,EAEIsC,IAAI,CAACG,SAAL,CAAejD,KAAf,CAFJ;AAIH;;AAhXU,O;;yBAmXAnD,Q","sourcesContent":["import { sys } from 'cc';\nimport { max, min, sum, clone, listRandom } from './functions/util';\n\nclass Property {\n    constructor() {}\n\n    TYPES = {\n        // 本局\n        AGE: \"AGE\", // 年龄 age AGE\n        CHR: \"CHR\", // 颜值 charm CHR\n        INT: \"INT\", // 智力 intelligence INT\n        STR: \"STR\", // 体质 strength STR\n        MNY: \"MNY\", // 家境 money MNY\n        SPR: \"SPR\", // 快乐 spirit SPR\n        LIF: \"LIF\", // 生命 life LIFE\n        TLT: \"TLT\", // 天赋 talent TLT\n        EVT: \"EVT\", // 事件 event EVT\n        TMS: \"TMS\", // 次数 times TMS\n\n        // Auto calc\n        LAGE: \"LAGE\", // 最低年龄 Low Age\n        HAGE: \"HAGE\", // 最高年龄 High Age\n        LCHR: \"LCHR\", // 最低颜值 Low Charm\n        HCHR: \"HCHR\", // 最高颜值 High Charm\n        LINT: \"LINT\", // 最低智力 Low Intelligence\n        HINT: \"HINT\", // 最高智力 High Intelligence\n        LSTR: \"LSTR\", // 最低体质 Low Strength\n        HSTR: \"HSTR\", // 最高体质 High Strength\n        LMNY: \"LMNY\", // 最低家境 Low Money\n        HMNY: \"HMNY\", // 最高家境 High Money\n        LSPR: \"LSPR\", // 最低快乐 Low Spirit\n        HSPR: \"HSPR\", // 最高快乐 High Spirit\n\n        SUM: \"SUM\", // 总评 summary SUM\n\n        EXT: \"EXT\", // 继承天赋\n\n        // 总计\n        // Achievement Total\n        ATLT: \"ATLT\", // 拥有过的天赋 Achieve Talent\n        AEVT: \"AEVT\", // 触发过的事件 Achieve Event\n        ACHV: \"ACHV\", // 达成的成就 Achievement\n\n        CTLT: \"RTLT\", // 天赋选择数 Count Talent\n        CEVT: \"REVT\", // 事件收集数 Count Event\n        CACHV: \"CACHV\", // 成就达成数 Count Achievement\n\n        // SPECIAL\n        RDM: 'RDM', // 随机属性 random RDM\n\n    };\n\n    // 特殊类型\n    SPECIAL = {\n        RDM: [ // 随机属性 random RDM\n            this.TYPES.CHR,\n            this.TYPES.INT,\n            this.TYPES.STR,\n            this.TYPES.MNY,\n            this.TYPES.SPR,\n        ]\n    }\n\n    #ageData;\n    #data = {};\n\n    initial({age}) {\n\n        this.#ageData = age;\n        for(const a in age) {\n            let { event, talent } = age[a];\n            if(!Array.isArray(event))\n                event = event?.split(',') || [];\n\n            event = event.map(v=>{\n                const value = `${v}`.split('*').map(n=>Number(n));\n                if(value.length==1) value.push(1);\n                return value;\n            });\n\n            if(!Array.isArray(talent))\n                talent = talent?.split(',') || [];\n\n            talent = talent.map(v=>Number(v));\n\n            age[a] = { event, talent };\n        }\n    }\n\n    restart(data) {\n        this.#data = {\n            [this.TYPES.AGE]: -1,\n\n            [this.TYPES.CHR]: 0,\n            [this.TYPES.INT]: 0,\n            [this.TYPES.STR]: 0,\n            [this.TYPES.MNY]: 0,\n            [this.TYPES.SPR]: 0,\n\n            [this.TYPES.LIF]: 1,\n\n            [this.TYPES.TLT]: [],\n            [this.TYPES.EVT]: [],\n\n            [this.TYPES.LAGE]: Infinity,\n            [this.TYPES.LCHR]: Infinity,\n            [this.TYPES.LINT]: Infinity,\n            [this.TYPES.LSTR]: Infinity,\n            [this.TYPES.LSPR]: Infinity,\n            [this.TYPES.LMNY]: Infinity,\n\n            [this.TYPES.HAGE]: -Infinity,\n            [this.TYPES.HCHR]: -Infinity,\n            [this.TYPES.HINT]: -Infinity,\n            [this.TYPES.HSTR]: -Infinity,\n            [this.TYPES.HMNY]: -Infinity,\n            [this.TYPES.HSPR]: -Infinity,\n        };\n        for(const key in data)\n            this.change(key, data[key]);\n    }\n\n    restartLastStep() {\n        this.#data[this.TYPES.LAGE] = this.get(this.TYPES.AGE);\n        this.#data[this.TYPES.LCHR] = this.get(this.TYPES.CHR);\n        this.#data[this.TYPES.LINT] = this.get(this.TYPES.INT);\n        this.#data[this.TYPES.LSTR] = this.get(this.TYPES.STR);\n        this.#data[this.TYPES.LSPR] = this.get(this.TYPES.SPR);\n        this.#data[this.TYPES.LMNY] = this.get(this.TYPES.MNY);\n        this.#data[this.TYPES.HAGE] = this.get(this.TYPES.AGE);\n        this.#data[this.TYPES.HCHR] = this.get(this.TYPES.CHR);\n        this.#data[this.TYPES.HINT] = this.get(this.TYPES.INT);\n        this.#data[this.TYPES.HSTR] = this.get(this.TYPES.STR);\n        this.#data[this.TYPES.HMNY] = this.get(this.TYPES.MNY);\n        this.#data[this.TYPES.HSPR] = this.get(this.TYPES.SPR);\n    }\n\n    get(prop) {\n        switch(prop) {\n            case this.TYPES.AGE:\n            case this.TYPES.CHR:\n            case this.TYPES.INT:\n            case this.TYPES.STR:\n            case this.TYPES.MNY:\n            case this.TYPES.SPR:\n            case this.TYPES.LIF:\n            case this.TYPES.TLT:\n            case this.TYPES.EVT:\n                return clone(this.#data[prop]);\n            case this.TYPES.LAGE:\n            case this.TYPES.LCHR:\n            case this.TYPES.LINT:\n            case this.TYPES.LSTR:\n            case this.TYPES.LMNY:\n            case this.TYPES.LSPR:\n                return min(\n                    this.#data[prop],\n                    this.get(this.fallback(prop))\n                );\n            case this.TYPES.HAGE:\n            case this.TYPES.HCHR:\n            case this.TYPES.HINT:\n            case this.TYPES.HSTR:\n            case this.TYPES.HMNY:\n            case this.TYPES.HSPR:\n                return max(\n                    this.#data[prop],\n                    this.get(this.fallback(prop))\n                );\n            case this.TYPES.SUM:\n                const HAGE = this.get(this.TYPES.HAGE);\n                const HCHR = this.get(this.TYPES.HCHR);\n                const HINT = this.get(this.TYPES.HINT);\n                const HSTR = this.get(this.TYPES.HSTR);\n                const HMNY = this.get(this.TYPES.HMNY);\n                const HSPR = this.get(this.TYPES.HSPR);\n                return Math.floor(sum(HCHR, HINT, HSTR, HMNY, HSPR)*2 + HAGE/2);\n            case this.TYPES.TMS:\n                return this.lsget('times') || 0;\n            case this.TYPES.EXT:\n                return this.lsget('extendTalent') || null;\n            case this.TYPES.ATLT:\n            case this.TYPES.AEVT:\n            case this.TYPES.ACHV:\n                return this.lsget(prop) || [];\n            case this.TYPES.CTLT:\n            case this.TYPES.CEVT:\n            case this.TYPES.CACHV:\n                return this.get(\n                    this.fallback(prop)\n                ).length;\n            default: return 0;\n        }\n    }\n\n    fallback(prop) {\n        switch(prop) {\n            case this.TYPES.LAGE:\n            case this.TYPES.HAGE: return this.TYPES.AGE;\n            case this.TYPES.LCHR:\n            case this.TYPES.HCHR: return this.TYPES.CHR;\n            case this.TYPES.LINT:\n            case this.TYPES.HINT: return this.TYPES.INT;\n            case this.TYPES.LSTR:\n            case this.TYPES.HSTR: return this.TYPES.STR;\n            case this.TYPES.LMNY:\n            case this.TYPES.HMNY: return this.TYPES.MNY;\n            case this.TYPES.LSPR:\n            case this.TYPES.HSPR: return this.TYPES.SPR;\n            case this.TYPES.CTLT: return this.TYPES.ATLT;\n            case this.TYPES.CEVT: return this.TYPES.AEVT;\n            case this.TYPES.CACHV: return this.TYPES.ACHV;\n            default: return;\n        }\n    }\n\n    set(prop, value) {\n        switch(prop) {\n            case this.TYPES.AGE:\n            case this.TYPES.CHR:\n            case this.TYPES.INT:\n            case this.TYPES.STR:\n            case this.TYPES.MNY:\n            case this.TYPES.SPR:\n            case this.TYPES.LIF:\n            case this.TYPES.TLT:\n            case this.TYPES.EVT:\n                this.hl(prop, this.#data[prop] = clone(value));\n                this.achieve(prop, value);\n                return;\n            case this.TYPES.TMS:\n                this.lsset('times', parseInt(value) || 0);\n                return;\n            case this.TYPES.EXT:\n                this.lsset('extendTalent', value);\n                return\n            default: return;\n        }\n    }\n\n    getLastRecord() {\n        return clone({\n            [this.TYPES.AGE]: this.get(this.TYPES.AGE),\n            [this.TYPES.CHR]: this.get(this.TYPES.CHR),\n            [this.TYPES.INT]: this.get(this.TYPES.INT),\n            [this.TYPES.STR]: this.get(this.TYPES.STR),\n            [this.TYPES.MNY]: this.get(this.TYPES.MNY),\n            [this.TYPES.SPR]: this.get(this.TYPES.SPR),\n        });\n    }\n\n    change(prop, value) {\n        if(Array.isArray(value)) {\n            for(const v of value)\n                this.change(prop, Number(v));\n            return;\n        }\n        switch(prop) {\n            case this.TYPES.AGE:\n            case this.TYPES.CHR:\n            case this.TYPES.INT:\n            case this.TYPES.STR:\n            case this.TYPES.MNY:\n            case this.TYPES.SPR:\n            case this.TYPES.LIF:\n                this.hl(prop, this.#data[prop] += Number(value));\n                return;\n            case this.TYPES.TLT:\n            case this.TYPES.EVT:\n                const v = this.#data[prop];\n                if(value<0) {\n                    const index = v.indexOf(value);\n                    if(index!=-1) v.splice(index,1);\n                }\n                if(!v.includes(value)) v.push(value);\n                this.achieve(prop, value);\n                return;\n            case this.TYPES.TMS:\n                this.set(\n                    prop,\n                    this.get(prop) + parseInt(value)\n                );\n                return;\n            default: return;\n        }\n    }\n\n    hookSpecial(prop) {\n        switch(prop) {\n            case this.TYPES.RDM: return listRandom(this.SPECIAL.RDM);\n            default: return prop;\n        }\n    }\n\n    effect(effects) {\n        for(let prop in effects)\n            this.change(\n                this.hookSpecial(prop),\n                Number(effects[prop])\n            );\n    }\n\n    isEnd() {\n        return this.get(this.TYPES.LIF) < 1;\n    }\n\n    ageNext() {\n        this.change(this.TYPES.AGE, 1);\n        const age = this.get(this.TYPES.AGE);\n        const {event, talent} = this.getAgeData(age);\n        return {age, event, talent};\n    }\n\n    getAgeData(age) {\n        return clone(this.#ageData[age]);\n    }\n\n    hl(prop, value) {\n        let keys;\n        switch(prop) {\n            case this.TYPES.AGE: keys = [this.TYPES.LAGE, this.TYPES.HAGE]; break;\n            case this.TYPES.CHR: keys = [this.TYPES.LCHR, this.TYPES.HCHR]; break;\n            case this.TYPES.INT: keys = [this.TYPES.LINT, this.TYPES.HINT]; break;\n            case this.TYPES.STR: keys = [this.TYPES.LSTR, this.TYPES.HSTR]; break;\n            case this.TYPES.MNY: keys = [this.TYPES.LMNY, this.TYPES.HMNY]; break;\n            case this.TYPES.SPR: keys = [this.TYPES.LSPR, this.TYPES.HSPR]; break;\n            default: return;\n        }\n        const [l, h] = keys;\n        this.#data[l] = min(this.#data[l], value);\n        this.#data[h] = max(this.#data[h], value);\n    }\n\n    achieve(prop, newData) {\n        let key;\n        switch(prop) {\n            case this.TYPES.ACHV:\n                const lastData = this.lsget(prop);\n                this.lsset(\n                    prop,\n                    (lastData || []).concat([[newData, Date.now()]])\n                );\n                return;\n            case this.TYPES.TLT: key = this.TYPES.ATLT; break;\n            case this.TYPES.EVT: key = this.TYPES.AEVT; break;\n            default: return;\n        }\n        const lastData = this.lsget(key) || [];\n        this.lsset(\n            key,\n            Array.from(\n                new Set(\n                    lastData\n                        .concat(newData||[])\n                        .flat()\n                )\n            )\n        )\n    }\n\n    lsget(key) {\n        const data = sys.localStorage.getItem(key);\n        if(data === null) return;\n        return JSON.parse(data);\n    }\n\n    lsset(key, value) {\n        sys.localStorage.setItem(\n            key,\n            JSON.stringify(value)\n        );\n    }\n}\n\nexport default Property;"]}