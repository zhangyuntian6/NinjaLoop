{"version":3,"sources":["file:///D:/NinjaLoop/assets/Script/Life.ts"],"names":["LifeManager","weightRandom","Property","Event","talentMgr","Achievement","ConfigManager","constructor","_property","_event","_talent","_achievement","_triggerTalents","initial","age","talents","events","achievements","Promise","all","readJson","restart","allocation","contents","talentReplace","TLT","doTalent","restartLastStep","achieve","Opportunity","START","getTalentAllocationAddition","allocationAddition","getTalentCurrentTriggerCount","talentId","next","event","talent","ageNext","talentContent","eventContent","doEvent","random","isEnd","content","TRAJECTORY","result","replace","id","push","source","get","target","type","change","TYPES","filter","max_triggers","do","effect","name","description","grade","eventId","postEvent","EVT","check","talentRandom","times","TMS","achievement","CACHV","getLastExtendTalent","talentExtend","set","EXT","getSummary","SUMMARY","AGE","HAGE","CHR","HCHR","INT","HINT","STR","HSTR","MNY","HMNY","SPR","HSPR","SUM","getLastRecord","exclusive","getAchievements","ticks","ACHV","forEach","tick","list","sort","a","ag","hide","ah","b","bg","bh","getTotal","CTLT","CEVT","totalTalent","count","totalEvent","talentRate","eventRate","v","END","lifeMgr"],"mappings":"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","sourcesContent":["import { weightRandom } from './functions/util'\nimport Property from './property';\nimport Event from './event';\nimport { ITalentData, TalentManager, talentMgr } from './Talent';\nimport { Achievement, IListAchievementData } from './achievement';\nimport ConfigManager from './Utils/ConfigManager';\n\ninterface ITalentReplacementInfo {\n    type: string;\n    source: ITalentData;\n    target: ITalentData;\n}\n\ninterface ITrackData {\n    age: number;\n    content: any[];\n    isEnd: boolean;\n}\n\nclass LifeManager {\n    constructor() {\n        this._property = new Property();\n        this._event = new Event();\n        this._talent = talentMgr;\n        this._achievement = new Achievement();\n    }\n\n    _property;\n    _event;\n    _talent: TalentManager;\n    _achievement;\n    _triggerTalents;\n\n    async initial() {\n        \n        const [age, talents, events, achievements] = await Promise.all([\n            ConfigManager.readJson('age'),\n            ConfigManager.readJson('talents'),\n            ConfigManager.readJson('events'),\n            ConfigManager.readJson('achievement'),\n        ])\n        this._property.initial({age});\n        this._talent.initial({talents});\n        this._event.initial({events});\n        this._achievement.initial({achievements});\n    }\n\n    restart(allocation) {\n        this._triggerTalents = {};\n        const contents = this.talentReplace(allocation.TLT);\n        this._property.restart(allocation);\n        this.doTalent();\n        this._property.restartLastStep();\n        this._achievement.achieve(\n            this._achievement.Opportunity.START,\n            this._property\n        )\n        return contents;\n    }\n\n    getTalentAllocationAddition(talents) {\n        return this._talent.allocationAddition(talents);\n    }\n\n    getTalentCurrentTriggerCount(talentId) {\n        return this._triggerTalents[talentId] || 0;\n    }\n\n    next(): ITrackData {\n        const {age, event, talent} = this._property.ageNext();\n\n        const talentContent = this.doTalent(talent);\n        const eventContent = this.doEvent(this.random(event));\n\n        const isEnd = this._property.isEnd();\n\n        const content = [...talentContent, ...eventContent];\n        this._achievement.achieve(\n            this._achievement.Opportunity.TRAJECTORY,\n            this._property\n        )\n        return { age, content, isEnd };\n    }\n\n    talentReplace(talents): ITalentReplacementInfo[] {\n        const result = this._talent.replace(talents);\n        const contents = [];\n        for(const id in result) {\n            talents.push(result[id]);\n            const source = this._talent.get(id);\n            const target = this._talent.get(result[id]);\n            contents.push({\n                type: 'talentReplace',\n                source, target\n            });\n        }\n        return contents;\n    }\n\n    doTalent(talents?: any[]) {\n        if(talents) this._property.change(this._property.TYPES.TLT, talents);\n        talents = this._property.get(this._property.TYPES.TLT)\n            .filter(talentId => this.getTalentCurrentTriggerCount(talentId) < this._talent.get(talentId).max_triggers);\n\n        const contents = [];\n        for(const talentId of talents) {\n            const result = this._talent.do(talentId, this._property);\n            if(!result) continue;\n            this._triggerTalents[talentId] = this.getTalentCurrentTriggerCount(talentId) + 1;\n            const { effect, name, description, grade } = result;\n            contents.push({\n                type: this._property.TYPES.TLT,\n                name,\n                grade,\n                description,\n            })\n            if(!effect) continue;\n            this._property.effect(effect);\n        }\n        return contents;\n    }\n\n    doEvent(eventId) {\n        const { effect, next, description, postEvent } = this._event.do(eventId, this._property);\n        this._property.change(this._property.TYPES.EVT, eventId);\n        this._property.effect(effect);\n        const content = {\n            type: this._property.TYPES.EVT,\n            description,\n            postEvent,\n        }\n        if(next) return [content, ...this.doEvent(next)];\n        return [content];\n    }\n\n    random(events) {\n        return weightRandom(\n            events.filter(\n                ([eventId])=>this._event.check(eventId, this._property)\n            )\n        );\n    }\n\n    talentRandom() {\n        const times = this._property.get(this._property.TYPES.TMS);\n        const achievement = this._property.get(this._property.TYPES.CACHV);\n        return this._talent.talentRandom(this.getLastExtendTalent(), { times, achievement });\n    }\n\n    talentExtend(talentId) {\n        this._property.set(this._property.TYPES.EXT, talentId);\n    }\n\n    getLastExtendTalent() {\n        return this._property.get(this._property.TYPES.EXT);\n    }\n\n    getSummary() {\n        this._achievement.achieve(\n            this._achievement.Opportunity.SUMMARY,\n            this._property\n        )\n        return {\n            AGE: this._property.get(this._property.TYPES.HAGE),\n            CHR: this._property.get(this._property.TYPES.HCHR),\n            INT: this._property.get(this._property.TYPES.HINT),\n            STR: this._property.get(this._property.TYPES.HSTR),\n            MNY: this._property.get(this._property.TYPES.HMNY),\n            SPR: this._property.get(this._property.TYPES.HSPR),\n            SUM: this._property.get(this._property.TYPES.SUM),\n        };\n    }\n\n    getLastRecord() {\n        return this._property.getLastRecord();\n    }\n\n    exclusive(talents, exclusive) {\n        return this._talent.exclusive(talents, exclusive);\n    }\n\n    getAchievements(): IListAchievementData[] {\n        const ticks = {};\n        this._property\n            .get(this._property.TYPES.ACHV)\n            .forEach(([id, tick]) => ticks[id] = tick);\n        return this\n            ._achievement\n            .list(this._property)\n            .sort((\n                {id: a, grade: ag, hide: ah},\n                {id: b, grade: bg, hide: bh}\n            )=>{\n                a = ticks[a];\n                b = ticks[b];\n                if(a&&b) return b - a;\n                if(!a&&!b) {\n                    if(ah&&bh) return bg - ag;\n                    if(ah) return 1;\n                    if(bh) return -1;\n                    return bg - ag;\n                }\n                if(!a) return 1;\n                if(!b) return -1;\n            });\n    }\n\n    getTotal() {\n        const TMS = this._property.get(this._property.TYPES.TMS);\n        const CACHV = this._property.get(this._property.TYPES.CACHV);\n        const CTLT = this._property.get(this._property.TYPES.CTLT);\n        const CEVT = this._property.get(this._property.TYPES.CEVT);\n\n        const totalTalent = this._talent.count();\n        const totalEvent = this._event.count();\n\n        return {\n            times: TMS,\n            achievement: CACHV,\n            talentRate: CTLT / totalTalent,\n            eventRate: CEVT / totalEvent,\n        }\n    }\n\n    get times() { return this._property?.get(this._property.TYPES.TMS) || 0; }\n    set times(v) {\n        this._property?.set(this._property.TYPES.TMS, v) || 0;\n        this._achievement.achieve(\n            this._achievement.Opportunity.END,\n            this._property\n        )\n    }\n}\n\nconst lifeMgr = new LifeManager();\nexport { lifeMgr };\nexport type { ITrackData };\n\n\n"]}