{"version":3,"sources":["file:///D:/NinjaLoop/assets/Script/Utils/EventMessage.ts"],"names":["EventEmitter","_listenerMap","Map","emit","name","args","funcList","get","forEach","func","on","set","push","off","idx","indexOf","splice","eventMsg"],"mappings":";;;iBAAMA,Y;;;;;;;;;;;8BAAAA,Y,GAAN,MAAMA,YAAN,CAAmB;AAAA;AAAA,eACPC,YADO,GACiC,IAAIC,GAAJ,EADjC;AAAA;;AAERC,QAAAA,IAAI,CAACC,IAAD,EAA+B;AAAA,4CAAbC,IAAa;AAAbA,YAAAA,IAAa;AAAA;;AACtC,cAAMC,QAAQ,GAAG,KAAKL,YAAL,CAAkBM,GAAlB,CAAsBH,IAAtB,CAAjB;;AACA,cAAIE,QAAJ,EAAc;AACVA,YAAAA,QAAQ,CAACE,OAAT,CAAkBC,IAAD,IAAU;AACvBA,cAAAA,IAAI,CAAC,GAAGJ,IAAJ,CAAJ;AACH,aAFD;AAGH;AACJ;;AAEMK,QAAAA,EAAE,CAACN,IAAD,EAAeK,IAAf,EAA+B;AACpC,cAAIH,QAAQ,GAAG,KAAKL,YAAL,CAAkBM,GAAlB,CAAsBH,IAAtB,CAAf;;AACA,cAAI,CAACE,QAAL,EAAe;AACXA,YAAAA,QAAQ,GAAG,EAAX;;AACA,iBAAKL,YAAL,CAAkBU,GAAlB,CAAsBP,IAAtB,EAA4BE,QAA5B;AACH;;AAEDA,UAAAA,QAAQ,CAACM,IAAT,CAAcH,IAAd;AACH;;AAEMI,QAAAA,GAAG,CAACT,IAAD,EAAeK,IAAf,EAA+B;AACrC,cAAMH,QAAQ,GAAG,KAAKL,YAAL,CAAkBM,GAAlB,CAAsBH,IAAtB,CAAjB;;AACA,cAAIE,QAAJ,EAAc;AACV,gBAAMQ,GAAG,GAAGR,QAAQ,CAACS,OAAT,CAAiBN,IAAjB,CAAZ;;AACA,gBAAIK,GAAG,IAAI,CAAX,EAAc;AACVR,cAAAA,QAAQ,CAACU,MAAT,CAAgBF,GAAhB,EAAqB,CAArB;AACH;AACJ;AACJ;;AA7Bc,O;;0BAgCbG,Q,GAAW,IAAIjB,YAAJ,E","sourcesContent":["class EventEmitter {\n    private _listenerMap: Map<string, Function[]> = new Map<string, Function[]>();\n    public emit(name: string, ...args: any[]) {\n        const funcList = this._listenerMap.get(name);\n        if (funcList) {\n            funcList.forEach((func) => {\n                func(...args);\n            });\n        }\n    }\n\n    public on(name: string, func: Function) {\n        let funcList = this._listenerMap.get(name);\n        if (!funcList) {\n            funcList = [];\n            this._listenerMap.set(name, funcList);\n        }\n\n        funcList.push(func);\n    }\n\n    public off(name: string, func: Function) {\n        const funcList = this._listenerMap.get(name);\n        if (funcList) {\n            const idx = funcList.indexOf(func);\n            if (idx >= 0) {\n                funcList.splice(idx, 1);\n            }\n        }\n    }\n}\n\nconst eventMsg = new EventEmitter();\n\nexport { EventEmitter, eventMsg }"]}