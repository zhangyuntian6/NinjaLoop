{"version":3,"sources":["file:///D:/NinjaLoop/assets/Script/UI/StartMenuPanel.ts"],"names":["_decorator","Node","Prefab","instantiate","eventMsg","TagItem","UIPanel","ccclass","property","fallLength","RADIUS","oneRadian","Math","PI","StartMenuPanel","type","_tagItems","_angleX","_angleY","_isAutoRotY","onStartButtonClicked","emit","onShow","tagList","createTagCloud","tagCloud","removeAllChildren","tagLength","length","i","k","a","acos","b","sqrt","x","sin","cos","y","z","labelNode","tagLabelPrfb","setParent","setPosition","tagItem","getComponent","push","setTagName","refresh","rotateX","forEach","pos","node","position","y1","z1","rotateY","x1","rotateItems","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, instantiate, Vec3, Label, UIOpacity } from 'cc';\nimport { eventMsg } from '../Utils/EventMessage';\nimport { TagItem } from './TagItem';\nimport { UIPanel } from './UIPanel';\nconst { ccclass, property } = _decorator;\n\nconst fallLength = 400;\nconst RADIUS: number = 200;\nconst oneRadian = Math.PI / 180;\n\n@ccclass('StartMenuPanel')\nexport class StartMenuPanel extends UIPanel {\n    @property({type: Prefab})\n    public tagLabelPrfb: Prefab;\n\n    @property({type: Node})\n    public tagCloud: Node;\n\n\n    private _tagItems: TagItem[] = [];\n    private _angleX = 0;\n    private _angleY = 0;\n    private _isAutoRotY = true;\n\n    public onStartButtonClicked(){\n        eventMsg.emit('StartGame');\n    }\n\n    protected onShow(tagList: string[]) {\n        this.createTagCloud(tagList);\n    }\n\n    public createTagCloud(tagList: string[]) {\n        this._tagItems = [];\n        this.tagCloud.removeAllChildren();\n        const tagLength = tagList.length;\n        for (let i = 0; i < tagLength; i++) {  \n            const k = (2*(i+1)-1)/tagLength - 1;\n            const a = Math.acos(k);\n            const b = a*Math.sqrt(tagLength*Math.PI);\n            // var a = Math.random()*2*Math.PI;\n            // var b = Math.random()*2*Math.PI;\n            var x = RADIUS * Math.sin(a) * Math.cos(b);\n            var y = RADIUS * Math.sin(a) * Math.sin(b); \n            var z = RADIUS * Math.cos(a);\n\n            const labelNode = instantiate(this.tagLabelPrfb);\n            labelNode.setParent(this.tagCloud);\n            labelNode.setPosition(x, y, z);\n            const tagItem = labelNode.getComponent(TagItem);\n            this._tagItems.push(tagItem);\n\n            tagItem.setTagName(tagList[i]);\n            tagItem.refresh(fallLength, RADIUS);\n        }\n    }\n\n    rotateX(){\n        const cos = Math.cos(this._angleX);\n        const sin = Math.sin(this._angleX);\n\n        this._tagItems.forEach((tagItem)=>{\n            const pos = tagItem.node.position;\n            var y1 = pos.y * cos - pos.z * sin;\n            var z1 = pos.z * cos + pos.y * sin;\n            tagItem.node.setPosition(pos.x, y1, z1);\n        });\n    }\n    rotateY(){\n        var cos = Math.cos(this._angleY);\n        var sin = Math.sin(this._angleY);\n\n        this._tagItems.forEach((tagItem)=>{\n            const pos = tagItem.node.position;\n            var x1 = pos.x * cos - pos.z * sin;\n            var z1 = pos.z * cos + pos.x * sin;\n            tagItem.node.setPosition(x1, pos.y, z1);\n        });\n    }\n\n    rotateItems() {\n        this.rotateX();\n        this.rotateY();\n\n        this._tagItems.forEach((tagItem)=>{\n            tagItem.refresh(fallLength, RADIUS);\n        });\n    }\n\n    update (deltaTime: number) {\n        // [4]\n        if (this._isAutoRotY) {\n            this._angleY = deltaTime * oneRadian * 5;\n            this.rotateItems();\n        }\n    }\n}"]}